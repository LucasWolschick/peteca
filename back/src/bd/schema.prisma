datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              Int      @id @default(autoincrement())
  ingresso        DateTime @db.Date
  nome            String   @db.VarChar()
  ra              String?  @db.VarChar()
  matricula       String?  @db.VarChar()
  email           String   @unique @db.VarChar()
  verificado      Boolean
  senha           String   @db.VarChar()
  senha_removida  Boolean  @default(true)
  data_nascimento DateTime @db.Date
  imagem          String   @db.VarChar
  ativo           Boolean  @default(true)

  permissoes    UserPermissoes[]
  tokens        Token[]
  movimentacoes MovimentacaoItem[]
}

model Permissoes {
  id   Int    @id @default(autoincrement())
  nome String @unique @db.VarChar()

  users UserPermissoes[]
}

model UserPermissoes {
  user        User       @relation(fields: [userId], references: [id])
  userId      Int
  permissao   Permissoes @relation(fields: [permissaoId], references: [id])
  permissaoId Int

  @@id([userId, permissaoId])
}

model Token {
  id             Int      @id @default(autoincrement())
  token          String   @db.VarChar()
  user           User     @relation(fields: [userId], references: [id])
  userId         Int
  data_expiracao DateTime @db.Date
}

model Item {
  id            Int    @id @default(autoincrement())
  nome          String @db.VarChar()
  quantidade    Int    @db.Integer
  unidadeMedida String @db.VarChar()
  local         String @db.VarChar()

  movimentacoes MovimentacaoItem[]

  ativo Boolean @default(true)
}

// CRIADO: antigaQuantidade = antigaUnidadeMedida=antigoLocal=null
// ALTERADO: ao menos um campo antigo Ã© diferente do novo
// REMOVIDO: novoQuantidade = novoUnidadeMedida=novoLocal=null

enum TipoMovimentacaoItem {
  CRIADO
  ALTERADO
  REMOVIDO
}

model MovimentacaoItem {
  id   Int      @id @default(autoincrement())
  data DateTime @db.Date

  antigoNome          String? @db.VarChar()
  antigaQuantidade    Int?    @db.Integer
  antigaUnidadeMedida String? @db.VarChar()
  antigoLocal         String? @db.VarChar()

  novaQuantidade    Int?    @db.Integer
  novaUnidadeMedida String? @db.VarChar()
  novoLocal         String? @db.VarChar()
  novoNome          String? @db.VarChar()

  tipo TipoMovimentacaoItem

  itemId Int
  item   Item @relation(fields: [itemId], references: [id])

  autorId Int
  autor   User @relation(fields: [autorId], references: [id])
}
